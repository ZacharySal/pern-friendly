generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id             String      @id @default(uuid())
  isRepost       Boolean
  author_id      String
  parent_id      String?
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  content        String?
  attachment_key String?
  likes          PostLikes[]
  author         User        @relation("author", fields: [author_id], references: [id], onDelete: Cascade)
  parent         Post?       @relation("parent", fields: [parent_id], references: [id])
  children       Post[]      @relation("parent")
  saves          PostSaves[]
}

model User {
  id              String      @id @default(uuid())
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  first_name      String
  last_name       String
  display_name    String      @unique
  email           String      @unique
  password        String
  profile_img_key String?
  location        String?
  biography       String?
  banner_img_key  String?
  banner_color    String?
  posts           Post[]      @relation("author")
  savedPosts      PostSaves[]
  followers       Followers[] @relation("followers")
  following       Followers[] @relation("following")
  liked_posts     PostLikes[]
}

model PostLikes {
  post    Post   @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String

  @@id(name: "postLikes", [user_id, post_id])
}

model PostSaves {
  created_at DateTime @default(now())
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String

  @@id(name: "postSaves", [user_id, post_id])
}

model Followers {
  follower    User   @relation("following", fields: [follower_id], references: [id], onDelete: Cascade)
  follower_id String
  followee    User   @relation("followers", fields: [followee_id], references: [id], onDelete: Cascade)
  followee_id String

  @@id(name: "followers", [follower_id, followee_id])
}
